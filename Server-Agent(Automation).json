{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Multinode HDP Cluster.",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "InstanceCount": {
            "Description": "Number of EC2 instances (must be between 2 and 7).",
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "MaxValue": 7,
            "ConstraintDescription": "Must be a number between 2 and 7.",
            "AllowedValues": [
                2,
                3,
                4,
                5,
                6,
                7
            ]
        },
		"ImageId": {
            "Description": "Image ID to launch EC2 instances.",
            "Type": "AWS::EC2::Image::Id",
            "Default": "ami-0b898040803850657"
        },
        "InstanceType": {
            "Description": "AWS EC2 instance type",
            "Type": "String",
            "Default": "t2.large",
            "AllowedValues": [
                "t2.small",
                "t2.medium",
                "t2.large"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type."
        },
        "SSHLocation": {
            "Description": " The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Conditions": {
        "Launch1": {
            "Fn::Equals": [
                1,
                1
            ]
        },
        "Launch2": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        1,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                }
            ]
        },
        "Launch3": {
            "Fn::And": [
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                1,
                                {
                                    "Ref": "InstanceCount"
                                }
                            ]
                        }
                    ]
                },
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                2,
                                {
                                    "Ref": "InstanceCount"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "Launch4": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        4,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        5,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        6,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        7,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                }
            ]
        },
        "Launch5": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        5,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        6,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        7,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                }
            ]
        },
        "Launch6": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        6,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        7,
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                }
            ]
        },
        "Launch7": {
            "Fn::Equals": [
                7,
                {
                    "Ref": "InstanceCount"
                }
            ]
        }
    },
    "Resources": {
        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    "EMR_EC2_DefaultRole"
                ]
            }
        },
        "Instance1": {
            "Condition": "Launch1",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Namenode"
                    }
                ],
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/xvda",
						"Ebs" : { "VolumeSize" : "80" ,
								  "VolumeType" : "gp2"
						}
					}
				],
				"AvailabilityZone" : "us-east-1d",
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
								"aws s3 cp s3://group5buck/blueprint/cluster_configuration.json /home/ec2-user",
								"aws s3 cp s3://group5buck/blueprint/hostmapping.json /home/ec2-user",	
								"aws s3 cp s3://group5buck/pythons/pyth.py /home/ec2-user",	
                                "yum install -y  iptables-services",
                                "service iptables stop",
                                "chkconfig iptables off",
                                "yum -y install wget",
                                "sudo sed -i 's/enforcing/disabled/g' /etc/selinux/config /etc/selinux/config",
                                "sudo sestatus",
                                "yum -y install ntp",
                                "chkconfig ntpd on",
                                "wget -nv http://public-repo-1.hortonworks.com/ambari/amazonlinux2/2.x/updates/2.7.1.0/ambari.repo -O /etc/yum.repos.d/ambari.repo",
                                "yum repolist",
                                "yum -y install ambari-agent",
                                "sed -i 's/platform_default/disabled/g' /etc/python/cert-verification.cfg",
                                "sed -i '65 a force_https_protocol=PROTOCOL_TLSv1_2' /etc/ambari-agent/conf/ambari-agent.ini",
                                "yum -y install ambari-server",
                                "wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm",
                                "sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm",
                                "wget https://rpmfind.net/linux/mageia/distrib/3/x86_64/media/core/release/mysql-connector-java-5.1.22-2.mga3.noarch.rpm",
                                "printf 'y\n' | yum install mysql-connector-java-5.1.22-2.mga3.noarch.rpm",
                                "cd /var/lib/ambari-server/resources/",
                                "ln -s /usr/share/java/mysql-connector-java.jar mysql-connector-java.jar",
                                "ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar",
                                "printf 'n\n1\ny\ny\nn\n' | ambari-server setup",
                                "ambari-server start",
								"ambari-agent start",
								"sudo easy_install pip",
								"pip install boto3"
                            ]
                        ]
                    }
                }
            }
        },
        "Instance2": {
            "Condition": "Launch2",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Datanode1"
                    }
                ],
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/xvda",
						"Ebs" : { "VolumeSize" : "80" ,
								  "VolumeType" : "gp2"
								}
					}
   
				],
				"AvailabilityZone" : "us-east-1d",
                "UserData": {
                    "Fn::Base64": {
						"Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
								"aws s3 cp s3://group5buck/blueprint/cluster_configuration.json /home/ec2-user",
								"aws s3 cp s3://group5buck/blueprint/hostmapping.json /home/ec2-user",
								"aws s3 cp s3://group5buck/pythons/pyth.py /home/ec2-user",	
                                "yum install -y  iptables-services",
                                "service iptables stop",
                                "chkconfig iptables off",
                                "yum -y install wget",
                                "sudo sed -i 's/enforcing/disabled/g' /etc/selinux/config /etc/selinux/config",
                                "sudo sestatus",
                                "yum -y install ntp",
                                "chkconfig ntpd on",
                                "wget -nv http://public-repo-1.hortonworks.com/ambari/amazonlinux2/2.x/updates/2.7.1.0/ambari.repo -O /etc/yum.repos.d/ambari.repo",
                                "yum repolist",
                                "yum -y install ambari-agent",
                                "sed -i 's/platform_default/disabled/g' /etc/python/cert-verification.cfg",
                                "sed -i '65 a force_https_protocol=PROTOCOL_TLSv1_2' /etc/ambari-agent/conf/ambari-agent.ini",		
								{ "Fn::Sub": "sed -i \"s/localhost/${Instance1.PrivateIp}/g\" /etc/ambari-agent/conf/ambari-agent.ini" },
								"ambari-agent start",
								"sudo easy_install pip",
								"pip install boto3"
                            ]
                        ]                       
                    }
                }
            },
            "DependsOn": "Instance1"
        },
        "Instance3": {
            "Condition": "Launch3",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Datanode2"
                    }
                ],
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/xvda",
						"Ebs" : { "VolumeSize" : "80" ,
								  "VolumeType" : "gp2"
								}
					}
   
				],
				"AvailabilityZone" : "us-east-1d",
                "UserData": {
                    "Fn::Base64": {
						"Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",	
								"aws s3 cp s3://group5buck/blueprint/cluster_configuration.json /home/ec2-user",
								"aws s3 cp s3://group5buck/blueprint/hostmapping.json /home/ec2-user",
								"aws s3 cp s3://group5buck/pythons/pyth.py /home/ec2-user",								
                                "yum install -y  iptables-services",
                                "service iptables stop",
                                "chkconfig iptables off",
                                "yum -y install wget",
                                "sudo sed -i 's/enforcing/disabled/g' /etc/selinux/config /etc/selinux/config",
                                "sudo sestatus",
                                "yum -y install ntp",
                                "chkconfig ntpd on",
                                "wget -nv http://public-repo-1.hortonworks.com/ambari/amazonlinux2/2.x/updates/2.7.1.0/ambari.repo -O /etc/yum.repos.d/ambari.repo",
                                "yum repolist",
                                "yum -y install ambari-agent",
                                "sed -i 's/platform_default/disabled/g' /etc/python/cert-verification.cfg",
                                "sed -i '65 a force_https_protocol=PROTOCOL_TLSv1_2' /etc/ambari-agent/conf/ambari-agent.ini",		
								{ "Fn::Sub": "sed -i \"s/localhost/${Instance1.PrivateIp}/g\" /etc/ambari-agent/conf/ambari-agent.ini" },
								"ambari-agent start",
								"sudo easy_install pip",
								"pip install boto3",
								"python /home/ec2-user/pyth.py",
								{ "Fn::Sub": "curl -H \"X-Requested-By: ambari\" -X POST -u admin:admin http://${Instance1.PublicIp}:8080/api/v1/blueprints/multinodehdp -d @/home/ec2-user/cluster_configuration.json" },
								{ "Fn::Sub": "curl -H \"X-Requested-By: ambari\" -X POST -u admin:admin http://${Instance1.PublicIp}:8080/api/v1/clusters/multinodehdp -d @/home/ec2-user/hostmapping.json" }
                            ]
                        ]                       
                    }
                }
            },
            "DependsOn": "Instance1"
        },
        "Instance4": {
            "Condition": "Launch4",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Datanode3"
                    }
                ],
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/xvda",
						"Ebs" : { "VolumeSize" : "80" ,
								  "VolumeType" : "gp2"
								}
					}
   
				],
				"AvailabilityZone" : "us-east-1d",
                "UserData": {
                    "Fn::Base64": {
						"Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "yum install -y  iptables-services",
                                "service iptables stop",
                                "chkconfig iptables off",
                                "yum -y install wget",
                                "sudo sed -i 's/enforcing/disabled/g' /etc/selinux/config /etc/selinux/config",
                                "sudo sestatus",
                                "yum -y install ntp",
                                "chkconfig ntpd on",
                                "wget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.7.1.0/ambari.repo -O /etc/yum.repos.d/ambari.repo",
                                "yum repolist",
                                "yum -y install ambari-agent",
                                "sed -i 's/platform_default/disabled/g' /etc/python/cert-verification.cfg",
                                "sed -i '65 a force_https_protocol=PROTOCOL_TLSv1_2' /etc/ambari-agent/conf/ambari-agent.ini",		
								{ "Fn::Sub": "sed -i \"s/localhost/${Instance1.PrivateIp}/g\" /etc/ambari-agent/conf/ambari-agent.ini" },
								"ambari-agent start"	
                            ]
                        ]                       
                    }
                }
            },
            "DependsOn": "Instance1"
        },
        "Instance5": {
            "Condition": "Launch5",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Datanode4"
                    }
                ],
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/xvda",
						"Ebs" : { "VolumeSize" : "80" ,
								  "VolumeType" : "gp2"
								}
					}
   
				],
				"AvailabilityZone" : "us-east-1d",
                "UserData": {
                    "Fn::Base64": {
						"Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "yum install -y  iptables-services",
                                "service iptables stop",
                                "chkconfig iptables off",
                                "yum -y install wget",
                                "sudo sed -i 's/enforcing/disabled/g' /etc/selinux/config /etc/selinux/config",
                                "sudo sestatus",
                                "yum -y install ntp",
                                "chkconfig ntpd on",
                                "wget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.7.1.0/ambari.repo -O /etc/yum.repos.d/ambari.repo",
                                "yum repolist",
                                "yum -y install ambari-agent",
                                "sed -i 's/platform_default/disabled/g' /etc/python/cert-verification.cfg",
                                "sed -i '65 a force_https_protocol=PROTOCOL_TLSv1_2' /etc/ambari-agent/conf/ambari-agent.ini",		
								{ "Fn::Sub": "sed -i \"s/localhost/${Instance1.PrivateIp}/g\" /etc/ambari-agent/conf/ambari-agent.ini" },
								"ambari-agent start"	
                            ]
                        ]                       
                    }
                }
            },
            "DependsOn": "Instance1"
        },
        "Instance6": {
            "Condition": "Launch6",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Datanode5"
                    }
                ],
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/xvda",
						"Ebs" : { "VolumeSize" : "80" ,
								  "VolumeType" : "gp2"
						}
					}
   
				],
				"AvailabilityZone" : "us-east-1d",
                "UserData": {
                    "Fn::Base64": {
						"Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "yum install -y  iptables-services",
                                "service iptables stop",
                                "chkconfig iptables off",
                                "yum -y install wget",
                                "sudo sed -i 's/enforcing/disabled/g' /etc/selinux/config /etc/selinux/config",
                                "sudo sestatus",
                                "yum -y install ntp",
                                "chkconfig ntpd on",
                                "wget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.7.1.0/ambari.repo -O /etc/yum.repos.d/ambari.repo",
                                "yum repolist",
                                "yum -y install ambari-agent",
                                "sed -i 's/platform_default/disabled/g' /etc/python/cert-verification.cfg",
                                "sed -i '65 a force_https_protocol=PROTOCOL_TLSv1_2' /etc/ambari-agent/conf/ambari-agent.ini",		
								{ "Fn::Sub": "sed -i \"s/localhost/${Instance1.PrivateIp}/g\" /etc/ambari-agent/conf/ambari-agent.ini" },
								"ambari-agent start"	
                            ]
                        ]                       
                    }
                }
            },
            "DependsOn": "Instance1"
        },
        "Instance7": {
            "Condition": "Launch7",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Datanode6"
                    }
                ],
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/xvda",
						"Ebs" : { "VolumeSize" : "80" ,
								  "VolumeType" : "gp2"
								}
					}
   
				],
				"AvailabilityZone" : "us-east-1d",
                "UserData": {
                    "Fn::Base64": {
						"Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "yum install -y  iptables-services",
                                "service iptables stop",
                                "chkconfig iptables off",
                                "yum -y install wget",
                                "sudo sed -i 's/enforcing/disabled/g' /etc/selinux/config /etc/selinux/config",
                                "sudo sestatus",
                                "yum -y install ntp",
                                "chkconfig ntpd on",
                                "wget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.7.1.0/ambari.repo -O /etc/yum.repos.d/ambari.repo",
                                "yum repolist",
                                "yum -y install ambari-agent",
                                "sed -i 's/platform_default/disabled/g' /etc/python/cert-verification.cfg",
                                "sed -i '65 a force_https_protocol=PROTOCOL_TLSv1_2' /etc/ambari-agent/conf/ambari-agent.ini",		
								{ "Fn::Sub": "sed -i \"s/localhost/${Instance1.PrivateIp}/g\" /etc/ambari-agent/conf/ambari-agent.ini" },
								"ambari-agent start"	
                            ]
                        ]                       
                    }
                }
            },
            "DependsOn": "Instance1"
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP access via port 80",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIpv6": "::/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIpv6": "::/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIpv6": "::/0"
                    }
                ]
            }
        }	
    },
	"Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "Instance1", "PublicIp" ]}, ":8080" ]]},
      "Description" : "Ambari Login Page"
    }
  }
}